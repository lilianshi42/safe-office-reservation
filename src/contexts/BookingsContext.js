import React, { useContext, useState, useEffect } from 'react';
import { retrieveDataFromCollectionDocument, uploadDataCollectionsDocument } from '../firebase/firebase';

const BookingsContext = React.createContext()

export function useBookings() {
    return useContext(BookingsContext)
}

export const BookingsProvider = ({ children }) => {
    const [loading, setLoading] = useState(true);
    const [bookingsData, setBookingsData] = useState(null);

    //return true if user has a booking on that date
    function userHasBookingThatDay(username, date) {
        return this.bookings.some(booking => booking.owner === username && booking.bookingDate === date);
    }

    //add new booking, note: needs to add validations later
    function addNewBooking(username, date, deskId, floorId) {
        //id can be auto generated by the datebase
        const id = Math.floor(Math.random() * 1000001);
        let newBooking = {
            id,
            owner: username,
            bookingDate: date,
            createdAT: new Date(),
            deskId,
            floorId,
            checkIn: false,
            checkOut: false
        }
        setBookingsData(...bookingsData, newBooking)
        uploadDataCollectionsDocument(newBooking)
        //this.bookings.push(newBooking);
    }

    //note: needs to add validations later
    function getBookingByUsernameAndDate(username, date) {
        if (!date) {
            return bookingsData.filter(booking => booking.owner === username);
        }
        return bookingsData.filter(booking => booking.owner === username && booking.bookingDate === date);
    }

    //note: needs to add validations later
    function checkInByUsernameAndDate(username, date) {
        var booking = getBookingByUsernameAndDate(username, date);
        booking.checkIn = true;
    }

    useEffect(() => {
        const unsubscribe = retrieveDataFromCollectionDocument('bookings')
            .then(data => {
                setBookingsData(data)
            })
        setLoading(false)
        return unsubscribe
    }, [])


    const value = {
        bookingsData,
        userHasBookingThatDay,
        addNewBooking,
        getBookingByUsernameAndDate,
        checkInByUsernameAndDate,
    }
    return (
        <BookingsContext.Provider value={value}>
            {!loading && children}
        </BookingsContext.Provider>
    );
}
